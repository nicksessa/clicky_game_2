{"version":3,"sources":["components/Navbar/Navbar.js","components/Wrapper/Wrapper.js","components/Footer/Footer.js","components/Banner/Banner.js","components/Card/Card.js","components/ClickyGame.js","index.js"],"names":["Navbar","props","className","navMsgColor","navMessage","score","highScore","Wrapper","children","Footer","Banner","Card","onClick","clickCount","id","alt","name","src","image","ClickyGame","state","cards","shake","gameOver","setState","console","log","this","forEach","card","count","alert","find","o","i","sort","Math","random","temporaryValue","randomIndex","array","slice","currentIndex","length","floor","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"uzEAaeA,G,MAVA,SAAAC,GAAK,OAChB,yBAAKC,UAAU,gCACX,4CACA,yBAAKA,UAAWD,EAAME,aAAcF,EAAMG,YAC1C,uCACYH,EAAMI,MADlB,IACyB,0BAAMH,UAAU,QAAhB,KADzB,gBACsED,EAAMK,cCHrEC,G,MAFC,SAAAN,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMO,YCU1CC,G,MAVA,kBACX,yBAAKP,UAAU,cACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,4CAAf,mBCGGQ,G,MAPA,kBACX,6BACI,yBAAKR,UAAU,kFACX,uBAAGA,UAAU,iBAAb,gFCKGS,G,MARF,SAAAV,GAAK,OAChB,yBAAKC,UAAU,OAAOU,QAAS,kBAAMX,EAAMY,WAAWZ,EAAMa,MAC1D,yBAAKZ,UAAU,iBACb,yBAAKa,IAAKd,EAAMe,KAAMC,IAAKhB,EAAMiB,Y,OCqGxBC,E,2MAhGXC,MAAQ,CACJf,MAAO,EACPC,UAAW,EACXe,QACAjB,WAAY,2BACZkB,OAAO,G,EAyBXC,SAAW,WAWP,OAVI,EAAKH,MAAMf,MAAQ,EAAKe,MAAMd,WAChC,EAAKkB,SAAS,CAAClB,UAAW,EAAKc,MAAMf,QAAQ,WAC3CoB,QAAQC,IAAIC,KAAKP,MAAMd,cAG3B,EAAKc,MAAMC,MAAMO,SAAQ,SAAAC,GACvBA,EAAKC,MAAQ,KAEfC,MAAM,yBAAD,OAA0B,EAAKX,MAAMf,QAC1C,EAAKmB,SAAS,CAACnB,MAAO,KACf,G,EAGTQ,WAAa,SAAAC,GACX,EAAKM,MAAMC,MAAMW,MAAK,SAACC,EAAGC,GACxB,GAAID,EAAEnB,KAAOA,EAAI,CACf,GAAsB,IAAnBO,EAAMa,GAAGJ,MAMV,OALAT,EAAMa,GAAGJ,MAAQT,EAAMa,GAAGJ,MAAQ,EAClC,EAAKN,SAAS,CAACnB,MAAQ,EAAKe,MAAMf,MAAQ,IAAI,WAC5CoB,QAAQC,IAAIC,KAAKP,MAAMf,UAEzB,EAAKe,MAAMC,MAAMc,MAAK,kBAAMC,KAAKC,SAAW,OACrC,EAEP,EAAKd,gB,yEAtCX,IANA,IAIiCe,EAAgBC,EAJ3CC,EAAQnB,EAAMoB,QAIhBC,EAAeF,EAAMG,OAElB,IAAMD,GAETH,EAAcH,KAAKQ,MAAMR,KAAKC,SAAWK,GAGzCJ,EAAiBE,EAFjBE,GAAgB,GAGhBF,EAAME,GAAgBF,EAAMD,GAC5BC,EAAMD,GAAeD,EAEzB,OAAOE,I,+BAoCD,IAAD,OACCpB,EAAQO,KAAKP,MACnB,OACI,6BACI,kBAAC,EAAD,CACIf,MAAOe,EAAMf,MACbC,UAAWc,EAAMd,UACjBF,WAAYgB,EAAMhB,aAEtB,kBAAC,EAAD,MACA,kBAAC,EAAD,KACCuB,KAAKP,MAAMC,MAAMwB,KAAI,SAAAhB,GAAI,OACtB,kBAAC,EAAD,CACIhB,WAAY,EAAKA,WACjBC,GAAIe,EAAKf,GACTgC,IAAKjB,EAAKf,GACVI,MAAOW,EAAKX,YAIpB,kBAAC,EAAD,W,GAnFS6B,a,MCLzBC,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,W","file":"static/js/main.071b772a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = props => (\r\n    <div className=\"navbar text-white fixed-top \">\r\n        <div>Clicky Game</div>\r\n        <div className={props.navMsgColor}>{props.navMessage}</div>\r\n        <div>\r\n            Score: {props.score} <span className=\"pipe\">|</span> High Score: {props.highScore}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer p-0\">\r\n        <div className=\"container-fluid p-0\">\r\n            <div className=\"footer1 text-white pt-5\"></div>\r\n            <div className=\"align-text-middle text-white p-3 footer2\" >\r\n                Clicky Game\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\nexport default Footer;","import React from 'react';\r\nimport './Banner.css';\r\n\r\nconst Banner = () => (\r\n    <div>\r\n        <div className=\"text-white banner text-center d-flex align-items-center justify-content-center\">\r\n            <p className=\"m-0 px-5 pt-5\">Click on an image to earn points, but don't click on any more than once!</p>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Banner;","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\n/*import Container from './Container';*/\r\nimport Wrapper from './Wrapper';\r\nimport Footer from './Footer';\r\nimport Banner from './Banner';\r\nimport Card from \"./Card\";\r\nimport cards from '../images/images.json';\r\n\r\n// Main App\r\nclass ClickyGame extends Component {\r\n    state = {\r\n        score: 0,\r\n        highScore: 0,\r\n        cards,\r\n        navMessage: 'Click an image to begin!',\r\n        shake: false\r\n    }\r\n    //imgArray = [\"https://cdna.artstation.com/p/assets/images/images/017/732/628/large/even-amundsen-2da23d94-7e10-4295-9223-969af0b4d265.jpg?1557149418\", \"https://cdnb.artstation.com/p/assets/images/images/004/239/951/large/manuel-castanon-knight-girl-high-resolution.jpg?1562781751\", \"https://cdna.artstation.com/p/assets/images/images/006/606/388/large/zudarts-lee-170601-01.jpg?1499878487\", \"https://cdna.artstation.com/p/assets/images/images/013/225/918/large/frederic-arsenault-full-beauty-name.jpg?1538637573\", \"https://cdna.artstation.com/p/assets/images/images/013/421/986/large/jaromir-hrivnac-20181005-sp5ii.jpg?1539543619\", \"https://cdna.artstation.com/p/assets/images/images/006/623/886/large/jonah-booth-remmers-knight.jpg?1500015016\", \"https://cdnb.artstation.com/p/assets/images/images/004/736/527/large/grzegorz-rutkowski-knight-study-4-1200.jpg?1485890644\", \"https://cdna.artstation.com/p/assets/images/images/010/829/628/large/steve-jung-knights-sj-low.jpg?1526447238\", \"https://cdnb.artstation.com/p/assets/images/images/002/213/207/large/_-dofresh-_-notavalon-def-halfsize.jpg?1458914308\", \"https://cdna.artstation.com/p/assets/images/images/013/011/240/large/antony-carlyon-blank-square.jpg?1537630464\", \"https://cdna.artstation.com/p/assets/images/images/007/853/612/large/stefan-kopinski-crusader1.jpg?1508939797\", \"https://cdna.artstation.com/p/assets/images/images/007/023/742/large/stefan-kopinski-lion-heart.jpg?1503095855\"]\r\n    //imgArray = images\r\n\r\n    shuffle() {\r\n        const array = cards.slice();\r\n        //let newArray = shuffle(newArr)\r\n\r\n        //var array = imgArray\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n    }\r\n\r\n\r\n    gameOver = () => {\r\n        if (this.state.score > this.state.highScore) {\r\n          this.setState({highScore: this.state.score}, function() {\r\n            console.log(this.state.highScore);\r\n          });\r\n        }\r\n        this.state.cards.forEach(card => {\r\n          card.count = 0;\r\n        });\r\n        alert(`Game Over :( \\nscore: ${this.state.score}`);\r\n        this.setState({score: 0});\r\n        return true;\r\n      }\r\n    \r\n      clickCount = id => {\r\n        this.state.cards.find((o, i) => {\r\n          if (o.id === id) {\r\n            if(cards[i].count === 0){\r\n              cards[i].count = cards[i].count + 1;\r\n              this.setState({score : this.state.score + 1}, function(){\r\n                console.log(this.state.score);\r\n              });\r\n              this.state.cards.sort(() => Math.random() - 0.5)\r\n              return true; \r\n            } else {\r\n              this.gameOver();\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n\r\n    render() {\r\n        const state = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    score={state.score}\r\n                    highScore={state.highScore}\r\n                    navMessage={state.navMessage}\r\n                />\r\n                <Banner />\r\n                <Wrapper>\r\n                {this.state.cards.map(card => (\r\n                    <Card\r\n                        clickCount={this.clickCount}\r\n                        id={card.id}\r\n                        key={card.id}\r\n                        image={card.image}\r\n                    />\r\n                ))}\r\n                </Wrapper>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n                <Container\r\n                    shake={state.shake}\r\n                    characters={state.allImages}\r\n                    clickEvent={this.clickEvent}\r\n                />\r\n*/\r\n\r\nexport default ClickyGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ClickyGame from './components/ClickyGame';\nimport './index.css';\n\nReactDOM.render(<ClickyGame />, document.getElementById('root'));\n"],"sourceRoot":""}